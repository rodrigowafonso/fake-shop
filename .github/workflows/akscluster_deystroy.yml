name: DESTROY-APP-KUBERNETES

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read    

jobs:
  AKS:
    runs-on: ubuntu-latest
    env:
      AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
      AZURE_CONTAINER_NAME: ${{ secrets.AZURE_CONTAINER_NAME }}
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
      AZURE_TERRAFORM_TFSTATE_KEY: ${{ secrets.AZURE_TERRAFORM_TFSTATE_KEY }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SCRECT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
   
    defaults:
      run:
        shell: bash
        working-directory: ./src/terraform

    steps:
      - name: Obter o Código do Projeto
        uses: actions/checkout@v4
      
      - name: Set UP Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ secrets.TERRAFORM_VERSION }}

      - name: Inicializando o Terraform (terraform init)
        id: init
        run: terraform init -backend-config="storage_account_name=$AZURE_STORAGE_ACCOUNT" -backend-config="container_name=$AZURE_CONTAINER_NAME" -backend-config="resource_group_name=$AZURE_RESOURCE_GROUP" -backend-config="key=$AZURE_TERRAFORM_TFSTATE_KEY"
      
      - name: Formatando o Código (terraform)
        id: fmt
        run: terraform fmt #-check

      - name: Validando do Código
        id: validate
        # if: success() || failure()
        run: terraform validate -no-color
      
      - name: Exibindo o Plano de Execução
        id: plan
        run: terraform plan -no-color

      - name: Provisionando o Ambiente
        id: apply
        run: terraform destroy -auto-approve