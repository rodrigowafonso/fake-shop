name: CI-CD-APP-KUBERNETES

on:
  push:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      destroy:
        description: Set to true to destroy th VPC and AKS
        required: true
        default: "true"

permissions:
  id-token: write
  contents: read    

jobs:
  BUILD:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.event.inputs.destroy != 'true' }}
    steps:
      - name: Obter o Código do Projeto
        uses: actions/checkout@v4

      - name: Autenticar no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}      

      - name: Construção e Envio da Imagem Docker
        uses: docker/build-push-action@v6
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          tags: |
            rodrigoafonso/fake-shop:latest
            rodrigoafonso/fake-shop:v${{ github.run_number }}  
  
  AKS:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.event.inputs.destroy != 'true' }}
    needs: [BUILD]
    env:
      AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
      AZURE_CONTAINER_NAME: ${{ secrets.AZURE_CONTAINER_NAME }}
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
      AZURE_TERRAFORM_TFSTATE_KEY: ${{ secrets.AZURE_TERRAFORM_TFSTATE_KEY }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SCRECT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
   
    defaults:
      run:
        shell: bash
        working-directory: ./src/terraform
    
    steps:
      - name: Obter o Código do Projeto
        uses: actions/checkout@v4
      
      - name: Autenticar no Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set UP Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ secrets.TERRAFORM_VERSION }}

      - name: Inicializando o Terraform (terraform init)
        id: init
        run: terraform init -backend-config="storage_account_name=$AZURE_STORAGE_ACCOUNT" -backend-config="container_name=$AZURE_CONTAINER_NAME" -backend-config="resource_group_name=$AZURE_RESOURCE_GROUP" -backend-config="key=$AZURE_TERRAFORM_TFSTATE_KEY"
      
      - name: Formatando o Código (terraform)
        id: fmt
        run: terraform fmt

      - name: Validando do Código
        id: validate
        run: terraform validate -no-color
      
      - name: Exibindo o Plano de Execução
        id: plan
        run: terraform plan -no-color

      - name: Provisionando o Ambiente
        id: apply
        run: terraform apply -auto-approve

  AKS-DESTROY:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.destroy == 'true' }}
    needs: [BUILD]
    env:
      AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
      AZURE_CONTAINER_NAME: ${{ secrets.AZURE_CONTAINER_NAME }}
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
      AZURE_TERRAFORM_TFSTATE_KEY: ${{ secrets.AZURE_TERRAFORM_TFSTATE_KEY }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SCRECT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    defaults:
      run:
        shell: bash
        working-directory: ./src/terraform
    
    steps:
      - name: Obter o Código do Projeto
        uses: actions/checkout@v4
      
      - name: Autenticar no Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Configurar o Kubectl 
        run: az aks get-credentials --resource-group KUBERNETES --name ${{ secrets.AZURE_CLUSTERKUBERNETES }} --admin

      - name: Deletar os Pods e Services
        run: |
          kubectl delete -f ./src/eks/deployment.yml
          kubectl delete -f ./src/prometheus/deployment.yml

      - name: Set UP Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ secrets.TERRAFORM_VERSION }}

      - name: Inicializando o Terraform (terraform init)
        id: init
        run: terraform init -backend-config="storage_account_name=$AZURE_STORAGE_ACCOUNT" -backend-config="container_name=$AZURE_CONTAINER_NAME" -backend-config="resource_group_name=$AZURE_RESOURCE_GROUP" -backend-config="key=$AZURE_TERRAFORM_TFSTATE_KEY"
      
      - name: Formatando o Código (terraform)
        id: fmt
        run: terraform fmt

      - name: Validando do Código
        id: validate
        run: terraform validate -no-color
      
      - name: Exibindo o Plano de Execução
        id: plan
        run: terraform plan -no-color

      - name: Provisionando o Ambiente
        id: apply
        run: terraform destroy -auto-approve
        
  DEPLOY:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.event.inputs.destroy != 'true' }}
    needs: [AKS]

    permissions:
      id-token: write
      contents: read
      actions: read

    steps:
      - name: Obter o Código do Projeto
        uses: actions/checkout@v4

      - name: Autenticar no Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Configurar o Kubectl 
        run: az aks get-credentials --resource-group KUBERNETES --name ${{ secrets.AZURE_CLUSTERKUBERNETES }} --admin

      - name: Deploy dos manifestos no Kubernetes
        uses: Azure/k8s-deploy@v5
        with:
          manifests: |
              ./src/eks/deployment.yml
              ./src/prometheus/deployment.yml
          images: |
              rodrigoafonso/fake-shop:v${{ github.run_number }}
        
      - name: Deploy dos manifestos Prometheus e Grafana
        uses: Azure/k8s-deploy@v5
        with:
          manifests: |
              ./src/prometheus/deployment.yml
      